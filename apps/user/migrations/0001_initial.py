# Generated by Django 3.2.18 on 2024-04-03 09:31

import uuid

import core.utils.colors
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("sessions", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=100, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="last name"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="update date"
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="password"
                    ),
                ),
                (
                    "password_updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="password update date",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="profile",
                        serialize=False,
                        to="user.user",
                        verbose_name="user",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        default=core.utils.colors.random_color,
                        max_length=7,
                        verbose_name="color",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="avatar/"),
                ),
                (
                    "accept_privacy",
                    models.BooleanField(
                        default=False, verbose_name="accept privacy terms"
                    ),
                ),
                (
                    "accept_user_tos",
                    models.BooleanField(
                        default=False, verbose_name="accept user terms of service"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("fr", "french"),
                            ("en", "english"),
                            ("es", "spanish"),
                        ],
                        default="fr",
                        max_length=10,
                        verbose_name="prefered language",
                    ),
                ),
                (
                    "nationality",
                    django_countries.fields.CountryField(
                        blank=True,
                        default="FR",
                        max_length=2,
                        null=True,
                        verbose_name="nationality",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(blank=True, null=True, verbose_name="birth date"),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "male"),
                            ("F", "female"),
                            ("N", "non binary"),
                            ("X", "other"),
                        ],
                        max_length=1,
                        null=True,
                        verbose_name="gender",
                    ),
                ),
                (
                    "telephone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="telephone",
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="zip code"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=50, verbose_name="city"),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(
                        max_length=2, verbose_name="country"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date create"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date update"
                    ),
                ),
            ],
            options={
                "verbose_name": "profile",
                "verbose_name_plural": "profiles",
                "ordering": ["-created_at"],
                "get_latest_by": "created_at",
            },
        ),
        migrations.CreateModel(
            name="ConnectionLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "connected_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="connection date",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(null=True, unpack_ipv4=True),
                ),
                (
                    "session",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sessions.session",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="connections",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "user connection log",
                "verbose_name_plural": "users connections logs",
                "ordering": ["-connected_at"],
                "get_latest_by": "connected_at",
                "unique_together": {("user", "connected_at")},
            },
        ),
    ]
